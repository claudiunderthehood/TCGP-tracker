{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../collection.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"pikachu-card\": a0,\n    \"charizard-card\": a1,\n    \"mewtwo-card\": a2\n  };\n};\nfunction CollectionComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"p\")(3, \"strong\");\n    i0.ɵɵtext(4, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"strong\");\n    i0.ɵɵtext(7, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10, \"Chance in positions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"ul\")(12, \"li\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"li\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"li\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CollectionComponent_div_31_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const card_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleOwnership(card_r1));\n    });\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(9, _c0, card_r1.Pack === \"Pikachu\", card_r1.Pack === \"Charizard\", card_r1.Pack === \"Mewtwo\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", card_r1.ID, \" - \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate3(\" \", card_r1.Name, \" - Pack: \", card_r1.Pack, \" - Rarity: \", card_r1.Rarity, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"First-Third: \", card_r1.PositionProbabilities[\"1-3\"] || 0, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Fourth: \", card_r1.PositionProbabilities[\"4\"] || 0, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Fifth: \", card_r1.PositionProbabilities[\"5\"] || 0, \"%\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", card_r1.Owned ? \"Owned\" : \"Not Owned\", \" \");\n  }\n}\nexport let CollectionComponent = /*#__PURE__*/(() => {\n  class CollectionComponent {\n    constructor(collectionService) {\n      this.collectionService = collectionService;\n      this.collection = [];\n      this.packageProbabilities = {};\n      this.bestPackage = {\n        name: '',\n        probability: 0\n      };\n    }\n    ngOnInit() {\n      this.loadCollection();\n    }\n    loadCollection() {\n      this.collectionService.getCollection().subscribe(data => {\n        this.collection = data.map(card => ({\n          ...card,\n          PositionProbabilities: card.PositionProbabilities || {\n            \"1-3\": 0,\n            \"4\": 0,\n            \"5\": 0\n          }\n        }));\n        this.calculateProbabilities(); // Calculate probabilities on load\n      });\n    }\n\n    toggleOwnership(card) {\n      card.Owned = !card.Owned;\n      this.collectionService.updateCollection(this.collection).subscribe(() => {\n        this.calculateProbabilities(); // Recalculate probabilities after updating ownership\n      });\n    }\n\n    calculateProbabilities() {\n      // Example calculation logic; replace with actual calculation logic.\n      const mewtwoOwned = this.collection.filter(card => card.Pack === 'Mewtwo' && card.Owned).length;\n      const pikachuOwned = this.collection.filter(card => card.Pack === 'Pikachu' && card.Owned).length;\n      const charizardOwned = this.collection.filter(card => card.Pack === 'Charizard' && card.Owned).length;\n      const totalMewtwo = this.collection.filter(card => card.Pack === 'Mewtwo').length;\n      const totalPikachu = this.collection.filter(card => card.Pack === 'Pikachu').length;\n      const totalCharizard = this.collection.filter(card => card.Pack === 'Charizard').length;\n      this.packageProbabilities = {\n        \"Mewtwo\": (totalMewtwo - mewtwoOwned) / totalMewtwo * 100,\n        \"Pikachu\": (totalPikachu - pikachuOwned) / totalPikachu * 100,\n        \"Charizard\": (totalCharizard - charizardOwned) / totalCharizard * 100\n      };\n      // Determine the best package to open for new cards\n      const bestPack = Object.entries(this.packageProbabilities).reduce((best, [pack, prob]) => {\n        return prob > best.probability ? {\n          name: pack,\n          probability: prob\n        } : best;\n      }, {\n        name: '',\n        probability: 0\n      });\n      this.bestPackage = bestPack;\n    }\n    static {\n      this.ɵfac = function CollectionComponent_Factory(t) {\n        return new (t || CollectionComponent)(i0.ɵɵdirectiveInject(i1.CollectionService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CollectionComponent,\n        selectors: [[\"app-collection\"]],\n        decls: 32,\n        vars: 18,\n        consts: [[1, \"overlay\"], [1, \"collection-list\"], [\"class\", \"card-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-item\", 3, \"ngClass\"], [1, \"card-details\"], [1, \"owned-button\", 3, \"click\"]],\n        template: function CollectionComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"div\", 0);\n            i0.ɵɵelementStart(1, \"h1\");\n            i0.ɵɵtext(2, \"Pok\\u00E9mon Collection\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"h2\");\n            i0.ɵɵtext(4, \"Package Probabilities\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"ul\")(6, \"li\")(7, \"strong\");\n            i0.ɵɵtext(8, \"Mewtwo Pack:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(9);\n            i0.ɵɵpipe(10, \"number\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"li\")(12, \"strong\");\n            i0.ɵɵtext(13, \"Pikachu Pack:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(14);\n            i0.ɵɵpipe(15, \"number\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"li\")(17, \"strong\");\n            i0.ɵɵtext(18, \"Charizard Pack:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(19);\n            i0.ɵɵpipe(20, \"number\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(21, \"h3\");\n            i0.ɵɵtext(22, \"Best Package to Open for New Cards\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"p\")(24, \"strong\");\n            i0.ɵɵtext(25);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(26);\n            i0.ɵɵpipe(27, \"number\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"h2\");\n            i0.ɵɵtext(29, \"Position Probabilities\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(30, \"div\", 1);\n            i0.ɵɵtemplate(31, CollectionComponent_div_31_Template, 20, 13, \"div\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(9);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(10, 6, ctx.packageProbabilities[\"Mewtwo\"], \"1.0-2\"), \"% chance of finding a new card\");\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(15, 9, ctx.packageProbabilities[\"Pikachu\"], \"1.0-2\"), \"% chance of finding a new card\");\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(20, 12, ctx.packageProbabilities[\"Charizard\"], \"1.0-2\"), \"% chance of finding a new card\");\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\"\", ctx.bestPackage.name, \" Pack\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵtextInterpolate1(\" with a \", i0.ɵɵpipeBind2(27, 15, ctx.bestPackage.probability, \"1.0-2\"), \"% chance of finding a new card\");\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.collection);\n          }\n        },\n        dependencies: [i2.NgClass, i2.NgForOf, i2.DecimalPipe],\n        styles: [\"body[_ngcontent-%COMP%]{background-image:url(pokeball.74dc9ecfac8abd9f.png);background-size:cover;background-position:center;background-repeat:no-repeat;background-attachment:fixed;color:#fff}.overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#00000080;pointer-events:none;z-index:-1}.pikachu-card[_ngcontent-%COMP%]{background-color:#ffd700cc}.charizard-card[_ngcontent-%COMP%]{background-color:#ff6347cc}.mewtwo-card[_ngcontent-%COMP%]{background-color:#9370dbcc}.card-item[_ngcontent-%COMP%]{display:flex;align-items:center;padding:10px;border-radius:5px;margin:10px 0;color:#fff;justify-content:space-between}.card-details[_ngcontent-%COMP%]{flex-grow:1}.owned-button[_ngcontent-%COMP%]{padding:5px 10px;font-size:.8em;background-color:#fff;color:#333;border:none;border-radius:3px;cursor:pointer}.owned-button[_ngcontent-%COMP%]:hover{background-color:#e0e0e0}\"]\n      });\n    }\n  }\n  return CollectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}