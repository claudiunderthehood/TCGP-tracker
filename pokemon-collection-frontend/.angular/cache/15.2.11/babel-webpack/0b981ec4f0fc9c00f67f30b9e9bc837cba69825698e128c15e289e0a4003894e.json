{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../collection.service\";\nimport * as i2 from \"@angular/common\";\nfunction CollectionComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pack_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", pack_r2, \" Pack:\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 2, ctx_r0.packageProbabilities[pack_r2], \"1.2-2\"), \"% chance of finding a new card \");\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"mewtwo-card\": a0,\n    \"pikachu-card\": a1,\n    \"charizard-card\": a2\n  };\n};\nfunction CollectionComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\")(2, \"p\")(3, \"strong\");\n    i0.ɵɵtext(4, \"ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementStart(6, \"strong\");\n    i0.ɵɵtext(7, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10, \"Chance in positions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"ul\")(12, \"li\");\n    i0.ɵɵtext(13);\n    i0.ɵɵpipe(14, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"li\");\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"li\");\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function CollectionComponent_div_13_Template_button_click_21_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const card_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleOwnership(card_r3));\n    });\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const card_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(18, _c0, card_r3.Pack === \"Mewtwo\", card_r3.Pack === \"Pikachu\", card_r3.Pack === \"Charizard\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", card_r3.ID, \" - \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate3(\" \", card_r3.Name, \" - Pack: \", card_r3.Pack, \" - Rarity: \", card_r3.Rarity, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"First-Third: \", i0.ɵɵpipeBind2(14, 9, ctx_r1.positionProbabilities[card_r3.ID][\"1-3\"], \"1.2-2\"), \"%\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Fourth: \", i0.ɵɵpipeBind2(17, 12, ctx_r1.positionProbabilities[card_r3.ID][\"4\"], \"1.2-2\"), \"%\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Fifth: \", i0.ɵɵpipeBind2(20, 15, ctx_r1.positionProbabilities[card_r3.ID][\"5\"], \"1.2-2\"), \"%\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(card_r3.Owned ? \"Owned\" : \"Not Owned\");\n  }\n}\nexport let CollectionComponent = /*#__PURE__*/(() => {\n  class CollectionComponent {\n    constructor(collectionService) {\n      this.collectionService = collectionService;\n      this.collection = [];\n      this.packageProbabilities = {};\n      this.bestPackage = {\n        name: '',\n        probability: 0\n      };\n      this.positionProbabilities = {};\n    }\n    ngOnInit() {\n      this.loadCollection();\n    }\n    loadCollection() {\n      this.collectionService.getCollection().subscribe(data => {\n        this.collection = data;\n        this.calculateProbabilities();\n      });\n    }\n    toggleOwnership(card) {\n      card.Owned = !card.Owned;\n      this.collectionService.updateCollection(this.collection).subscribe(() => {\n        this.calculateProbabilities();\n      });\n    }\n    calculateProbabilities() {\n      const packsToShow = [\"Mewtwo\", \"Pikachu\", \"Charizard\"];\n      const packCounts = {};\n      const ownedCounts = {};\n      // Count total and owned cards by pack\n      this.collection.forEach(card => {\n        if (packsToShow.includes(card.Pack)) {\n          if (!packCounts[card.Pack]) {\n            packCounts[card.Pack] = 0;\n            ownedCounts[card.Pack] = 0;\n          }\n          packCounts[card.Pack]++;\n          if (card.Owned) {\n            ownedCounts[card.Pack]++;\n          }\n        }\n      });\n      // Calculate package probabilities\n      packsToShow.forEach(pack => {\n        this.packageProbabilities[pack] = (packCounts[pack] - ownedCounts[pack]) / packCounts[pack] * 100;\n      });\n      // Determine the best package to open\n      this.bestPackage = Object.entries(this.packageProbabilities).reduce((best, [pack, probability]) => {\n        return probability > best.probability ? {\n          name: pack,\n          probability\n        } : best;\n      }, {\n        name: '',\n        probability: 0\n      });\n      // Define rarity probabilities based on position\n      const rarityProbabilities = {\n        \"♢\": {\n          \"1-3\": 100.0,\n          \"4\": 0.0,\n          \"5\": 0.0\n        },\n        \"♢♢\": {\n          \"1-3\": 0.0,\n          \"4\": 90.0,\n          \"5\": 60.0\n        },\n        \"♢♢♢\": {\n          \"1-3\": 0.0,\n          \"4\": 5.0,\n          \"5\": 20.0\n        },\n        \"♢♢♢♢\": {\n          \"1-3\": 0.0,\n          \"4\": 1.666,\n          \"5\": 6.664\n        },\n        \"☆\": {\n          \"1-3\": 0.0,\n          \"4\": 2.572,\n          \"5\": 10.288\n        },\n        \"☆☆\": {\n          \"1-3\": 0.0,\n          \"4\": 0.5,\n          \"5\": 2.0\n        },\n        \"☆☆☆\": {\n          \"1-3\": 0.0,\n          \"4\": 0.222,\n          \"5\": 0.888\n        },\n        \"♛\": {\n          \"1-3\": 0.0,\n          \"4\": 0.04,\n          \"5\": 0.16\n        }\n      };\n      // Assign position probabilities to each card based on rarity\n      this.collection.forEach(card => {\n        this.positionProbabilities[card.ID] = {\n          \"1-3\": this.calculatePositionProbability(card, \"1-3\", rarityProbabilities),\n          \"4\": this.calculatePositionProbability(card, \"4\", rarityProbabilities),\n          \"5\": this.calculatePositionProbability(card, \"5\", rarityProbabilities)\n        };\n      });\n    }\n    calculatePositionProbability(card, position, rarityProbabilities) {\n      // Calculate the probability for the given position, based on rarity\n      const rarity = card.Rarity;\n      const baseProbability = rarityProbabilities[rarity]?.[position] || 0;\n      // Calculate adjustments based on collection state (owned or not)\n      const totalCardsOfRarity = this.collection.filter(c => c.Rarity === rarity).length;\n      const ownedCardsOfRarity = this.collection.filter(c => c.Rarity === rarity && c.Owned).length;\n      // Adjust probability based on ownership of cards of the same rarity\n      return (totalCardsOfRarity - ownedCardsOfRarity) / totalCardsOfRarity * baseProbability;\n    }\n    getObjectKeys(obj) {\n      return Object.keys(obj);\n    }\n    static {\n      this.ɵfac = function CollectionComponent_Factory(t) {\n        return new (t || CollectionComponent)(i0.ɵɵdirectiveInject(i1.CollectionService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CollectionComponent,\n        selectors: [[\"app-collection\"]],\n        decls: 14,\n        vars: 7,\n        consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"click\"]],\n        template: function CollectionComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h1\");\n            i0.ɵɵtext(1, \"Pok\\u00E9mon Collection\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"h2\");\n            i0.ɵɵtext(3, \"Package Probabilities\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"ul\");\n            i0.ɵɵtemplate(5, CollectionComponent_li_5_Template, 5, 5, \"li\", 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"h3\");\n            i0.ɵɵtext(7, \"Best Package to Open for New Cards\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"p\");\n            i0.ɵɵtext(9);\n            i0.ɵɵpipe(10, \"number\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"h2\");\n            i0.ɵɵtext(12, \"Position Probabilities\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(13, CollectionComponent_div_13_Template, 23, 22, \"div\", 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.getObjectKeys(ctx.packageProbabilities));\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate2(\"\", ctx.bestPackage.name, \" Pack with a \", i0.ɵɵpipeBind2(10, 4, ctx.bestPackage.probability, \"1.2-2\"), \"% chance of finding a new card\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.collection);\n          }\n        },\n        dependencies: [i2.NgClass, i2.NgForOf, i2.DecimalPipe],\n        styles: [\"body[_ngcontent-%COMP%]{background-image:url(/img/pokeball.png);background-size:cover;color:#fff}.mewtwo-card[_ngcontent-%COMP%]{background-color:#9370dbcc;padding:10px;margin:5px;border-radius:5px}.pikachu-card[_ngcontent-%COMP%]{background-color:#ffd700cc;padding:10px;margin:5px;border-radius:5px}.charizard-card[_ngcontent-%COMP%]{background-color:#ff6347cc;padding:10px;margin:5px;border-radius:5px}.card-item[_ngcontent-%COMP%]{padding:10px;border-radius:5px;margin:10px 0;color:#fff}\"]\n      });\n    }\n  }\n  return CollectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}